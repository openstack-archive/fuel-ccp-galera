dsl_version: 0.2.0
service:
  name: {{ service.database }}
  antiAffinity: local
  ports:
    - {{ percona.port }}
  containers:
    - name: galera-checker
      image: galera-checker
      volumes:
        - name: mysql-storage
          path: "/var/lib/mysql"
          type: host
          readOnly: true
      daemon:
        files:
          - galera-checker
          - entrypoint_utils
        dependencies:
          - etcd
        command: "/opt/ccp/bin/galera_checker.py liveness"
    - name: galera-haproxy
      image: galera-haproxy
      probes:
        readiness: "/opt/ccp/bin/haproxy_entrypoint.py readiness"
      pre:
        - name: mkdir-run
          command: "sudo /bin/mkdir /run/haproxy"
        - name: chown-run
          command: "sudo /bin/chown -R haproxy: /run/haproxy"
      daemon:
        files:
          - haproxy-conf
          - haproxy_entrypoint
          - entrypoint_utils
        dependencies:
          - etcd
        command: "/opt/ccp/bin/haproxy_entrypoint.py daemon"
    - name: galera
      image: percona
      probes:
        readiness: "/opt/ccp/bin/galera_checker.py readiness"
        liveness:
          path: "/"
          type: "httpGet"
          port: 8080
          timeout: 5
          initialDelay: 60
      volumes:
        - name: mysql-logs
          path: "/var/log/ccp/mysql"
          type: host
          readOnly: false
        - name: mysql-storage
          path: "/var/lib/mysql"
          type: host
          readOnly: false
      pre:
        - name: chown-logs-dir
          command: "sudo /bin/chown mysql:mysql /var/log/ccp/mysql"
        - name: chown-data-dir
          command: "sudo /bin/chown mysql:mysql /var/lib/mysql"
        # {% if percona.ssl.enabled %}
        - name: gen-server-certs
          command:
            openssl req -newkey rsa:2048 -days 10000 -nodes -keyout /etc/mysql/certs/server-key.pem -out /etc/mysql/certs/server-req.pem -subj "/CN=*.{{ namespace }}.svc.cluster.local" &&
            openssl rsa -in /etc/mysql/certs/server-key.pem -out /etc/mysql/certs/server-key.pem &&
            openssl x509 -req -in /etc/mysql/certs/server-req.pem -days 10000 -CA /etc/mysql/certs/ca.pem -CAkey /etc/mysql/certs/ca-key.pem -set_serial -1 -out /etc/mysql/certs/server-cert.pem
        - name: gen-client-certs
          command:
            openssl req -newkey rsa:2048 -days 10000 -nodes -keyout /etc/mysql/certs/client-key.pem -out /etc/mysql/certs/client-req.pem -subj "/CN=*.{{ namespace }}.svc.cluster.local" &&
            openssl rsa -in /etc/mysql/certs/client-key.pem -out /etc/mysql/certs/client-key.pem &&
            openssl x509 -req -in /etc/mysql/certs/client-req.pem -days 10000 -CA /etc/mysql/certs/ca.pem -CAkey /etc/mysql/certs/ca-key.pem -set_serial -1 -out /etc/mysql/certs/client-cert.pem
        - name: make-ssl-a-bit-more-secure
          command: rm -f /etc/mysql/certs/ca-key.pem ; chmod 0400 /etc/mysql/certs/*
        # {% endif %}
      daemon:
        files:
          - entrypoint
          - mycnf
          - galera-checker
          - entrypoint_utils
          # {% if percona.ssl.enabled %}
          - ca.pem
          - ca-key.pem
          # {% endif %}
        dependencies:
          - etcd
        command: /opt/ccp/bin/entrypoint.py

files:
  entrypoint:
    path: /opt/ccp/bin/entrypoint.py
    content: percona_entrypoint.py
    perm: "0755"
  mycnf:
    path: /etc/mysql/my.cnf
    content: my.cnf.j2
  galera-checker:
    path: /opt/ccp/bin/galera_checker.py
    content: galera_checker.py
    perm: "0755"
  haproxy-conf:
    path: /etc/haproxy/haproxy.conf
    content: haproxy.conf.j2
  haproxy_entrypoint:
    path: /opt/ccp/bin/haproxy_entrypoint.py
    content: haproxy_entrypoint.py
    perm: "0755"
  entrypoint_utils:
    path: /opt/ccp/bin/entrypoint_utils.py
    content: entrypoint_utils.py
# {% if percona.ssl.enabled %}
  ca.pem:
    path: /etc/mysql/certs/ca.pem
    content: ca.pem.j2
    perm: "0400"
  ca-key.pem:
    path: /etc/mysql/certs/ca-key.pem
    content: ca-key.pem.j2
    perm: "0400"
# {% endif %}
